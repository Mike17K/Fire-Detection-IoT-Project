version: "3"

services:
  public_api:
    build:
      context: .
      dockerfile_inline: |
        FROM python:latest
        WORKDIR /public_api
        COPY public_api_requirements.txt .
        RUN pip install -r public_api_requirements.txt
        COPY *.py ./
        EXPOSE 3000
        CMD ["python", "public_api.py"]

    restart: unless-stopped
    ports:
      - 3000:3000
    # depends_on:
    #   - orion

  mqtt_client:
    build:
      context: .
      dockerfile_inline: |
        FROM python:latest
        WORKDIR /mqtt_client
        COPY mqtt_requirements.txt .
        RUN pip install -r mqtt_requirements.txt
        COPY *.py ./
        CMD ["python", "-u", "mqtt_client.py"]

    restart: unless-stopped
    # depends_on:
    #   - orion

  data_generation:
    build:
      context: .
      dockerfile_inline: |
        FROM python:latest
        WORKDIR /generate_data
        COPY data_requirements.txt .
        RUN pip install -r data_requirements.txt
        COPY *.py ./
        CMD ["python", "-u", "generate_data.py"]

    restart: unless-stopped
    # depends_on:
    #   - orion

    detection_model:
      build:
        context: .
        dockerfile_inline: |
          FROM tensorflow/tensorflow:latest
          WORKDIR /detection_model
          COPY ai_requirements.txt .
          RUN pip install -r ai_requirements.txt
          COPY *.py ./
          COPY ai ./ai
          CMD ["python", "-u", "ai_connection.py"]

      restart: unless-stopped
      # depends_on:
      #   - orion

  # orion:
  #   image: fiware/orion
  #   restart: unless-stopped
  #   ports:
  #     - 1026:1026
  #   depends_on:
  #     - mongo
  #   command: -dbhost mongo

  # mongo:
  #   image: mongo:6.0
  #   restart: unless-stopped
  #   command: --nojournal
  #   volumes:
  #     - /data/mongo/iot:/data/db
